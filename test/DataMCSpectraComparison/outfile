import FWCore.ParameterSet.Config as cms

process = cms.Process("Zprime2muAnalysis")

process.source = cms.Source("PoolSource",
    fileNames = cms.untracked.vstring('/store/mc/RunIISpring16MiniAODv1/ZToMuMu_NNPDF30_13TeV-powheg_M_120_200/MINIAODSIM/PUSpring16_80X_mcRun2_asymptotic_2016_v3-v1/30000/02244373-7E03-E611-B581-003048F5B2B4.root')
)
process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(-1)
)

process.options = cms.untracked.PSet(
    wantSummary = cms.untracked.bool(False)
)

process.Our2012Leptons = cms.EDProducer("Zprime2muLeptonProducer",
    electron_cuts = cms.string('userInt("HEEPId") == 0'),
    electron_muon_veto_dR = cms.double(-1),
    electron_src = cms.InputTag("cleanPatElectrons"),
    electron_srcSecond = cms.InputTag("cleanPatElectrons"),
    muon_cuts = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    muon_photon_match_src = cms.InputTag("muonPhotonMatch"),
    muon_src = cms.InputTag("cleanPatMuonsTriggerMatch"),
    muon_srcSecond = cms.InputTag("cleanPatMuonsTriggerMatch"),
    muon_track_for_momentum = cms.string('TunePNew'),
    muon_track_for_momentum_CSC = cms.string('Inner'),
    trigger_match_max_dR = cms.double(0.2),
    trigger_summary_src = cms.InputTag("hltTriggerSummaryAOD","","HLT")
)


process.Our2012MuonsAllSigns = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsAllSigns"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsElectronsAllSigns = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsElectronsAllSigns"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsElectronsOppSign = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsElectronsOppSign"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsElectronsSameSign = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsElectronsSameSign"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsMinusElectronsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsMinusElectronsMinus"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsMinusElectronsPlus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsMinusElectronsPlus"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsMinusMuonsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsMinusMuonsMinus"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsPlusElectronsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsPlusElectronsMinus"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsPlusElectronsPlus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsPlusElectronsPlus"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsPlusMuonsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsPlusMuonsMinus"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsPlusMuonsPlus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsPlusMuonsPlus"),
    vertex_chi2_max = cms.double(20)
)


process.Our2012MuonsSameSign = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOur2012MuonsSameSign"),
    vertex_chi2_max = cms.double(20)
)


process.OurMuPrescaled2012Leptons = cms.EDProducer("Zprime2muLeptonProducer",
    electron_cuts = cms.string('userInt("HEEPId") == 0'),
    electron_muon_veto_dR = cms.double(-1),
    electron_src = cms.InputTag("cleanPatElectrons"),
    electron_srcSecond = cms.InputTag("cleanPatElectrons"),
    muon_cuts = cms.string('isGlobalMuon && isTrackerMuon && pt > 27 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    muon_photon_match_src = cms.InputTag("muonPhotonMatch"),
    muon_src = cms.InputTag("cleanPatMuonsTriggerMatch"),
    muon_srcSecond = cms.InputTag("cleanPatMuonsTriggerMatch"),
    muon_track_for_momentum = cms.string('TunePNew'),
    muon_track_for_momentum_CSC = cms.string('Inner'),
    trigger_match_max_dR = cms.double(0.2),
    trigger_summary_src = cms.InputTag("hltTriggerSummaryAOD","","HLT")
)


process.OurMuPrescaled2012MuonsAllSigns = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOurMuPrescaled2012MuonsAllSigns"),
    vertex_chi2_max = cms.double(20)
)


process.OurMuPrescaled2012MuonsMinusMuonsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOurMuPrescaled2012MuonsMinusMuonsMinus"),
    vertex_chi2_max = cms.double(20)
)


process.OurMuPrescaled2012MuonsPlusMuonsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOurMuPrescaled2012MuonsPlusMuonsMinus"),
    vertex_chi2_max = cms.double(20)
)


process.OurMuPrescaled2012MuonsPlusMuonsPlus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOurMuPrescaled2012MuonsPlusMuonsPlus"),
    vertex_chi2_max = cms.double(20)
)


process.OurMuPrescaled2012MuonsSameSign = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allOurMuPrescaled2012MuonsSameSign"),
    vertex_chi2_max = cms.double(20)
)


process.SimpleLeptons = cms.EDProducer("Zprime2muLeptonProducer",
    electron_cuts = cms.string('userInt("HEEPId") == 0'),
    electron_muon_veto_dR = cms.double(-1),
    electron_src = cms.InputTag("cleanPatElectrons"),
    electron_srcSecond = cms.InputTag("cleanPatElectrons"),
    muon_cuts = cms.string(''),
    muon_photon_match_src = cms.InputTag("muonPhotonMatch"),
    muon_src = cms.InputTag("cleanPatMuonsTriggerMatch"),
    muon_srcSecond = cms.InputTag("cleanPatMuonsTriggerMatch"),
    muon_track_for_momentum = cms.string('TunePNew'),
    muon_track_for_momentum_CSC = cms.string('Inner'),
    trigger_match_max_dR = cms.double(0.2),
    trigger_summary_src = cms.InputTag("hltTriggerSummaryAOD","","HLT")
)


process.SimpleMuonsAllSigns = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsAllSigns")
)


process.SimpleMuonsElectronsAllSigns = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsElectronsAllSigns")
)


process.SimpleMuonsElectronsOppSign = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsElectronsOppSign")
)


process.SimpleMuonsElectronsSameSign = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsElectronsSameSign")
)


process.SimpleMuonsMinusElectronsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsMinusElectronsMinus")
)


process.SimpleMuonsMinusElectronsPlus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsMinusElectronsPlus")
)


process.SimpleMuonsMinusMuonsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsMinusMuonsMinus")
)


process.SimpleMuonsPlusElectronsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsPlusElectronsMinus")
)


process.SimpleMuonsPlusElectronsPlus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsPlusElectronsPlus")
)


process.SimpleMuonsPlusMuonsMinus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsPlusMuonsMinus")
)


process.SimpleMuonsPlusMuonsPlus = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsPlusMuonsPlus")
)


process.SimpleMuonsSameSign = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    cut = cms.string(''),
    do_remove_overlap = cms.bool(False),
    max_candidates = cms.uint32(100),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allSimpleMuonsSameSign")
)


process.allDimuons = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string(''),
    decay = cms.string('leptons:muons@+ leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsAllSigns = cms.EDProducer("Zprime2muCombiner",
    checkCharge = cms.bool(False),
    cut = cms.string(''),
    decay = cms.string('Our2012Leptons:muons@- Our2012Leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsElectronsAllSigns = cms.EDProducer("Zprime2muCombiner",
    checkCharge = cms.bool(False),
    cut = cms.string(''),
    decay = cms.string('Our2012Leptons:muons@+ Our2012Leptons:electrons@+'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsElectronsOppSign = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string(''),
    decay = cms.string('Our2012Leptons:muons@+ Our2012Leptons:electrons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsElectronsSameSign = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string(''),
    decay = cms.string('Our2012Leptons:muons@+ Our2012Leptons:electrons@+'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsMinusElectronsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 24'),
    decay = cms.string('Our2012Leptons:muons@- Our2012Leptons:electrons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsMinusElectronsPlus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 2'),
    decay = cms.string('Our2012Leptons:muons@- Our2012Leptons:electrons@+'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsMinusMuonsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 26'),
    decay = cms.string('Our2012Leptons:muons@- Our2012Leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsPlusElectronsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == -2'),
    decay = cms.string('Our2012Leptons:muons@+ Our2012Leptons:electrons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsPlusElectronsPlus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == -24'),
    decay = cms.string('Our2012Leptons:muons@+ Our2012Leptons:electrons@+'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsPlusMuonsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 0'),
    decay = cms.string('Our2012Leptons:muons@+ Our2012Leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsPlusMuonsPlus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == -26'),
    decay = cms.string('Our2012Leptons:muons@+ Our2012Leptons:muons@+'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOur2012MuonsSameSign = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string(''),
    decay = cms.string('Our2012Leptons:muons@- Our2012Leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("TriggerMatchPt") > 50 ')
)


process.allOurMuPrescaled2012MuonsAllSigns = cms.EDProducer("Zprime2muCombiner",
    checkCharge = cms.bool(False),
    cut = cms.string(''),
    decay = cms.string('OurMuPrescaled2012Leptons:muons@- OurMuPrescaled2012Leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 27 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("prescaledTriggerMatchPt") > 24 ')
)


process.allOurMuPrescaled2012MuonsMinusMuonsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 26'),
    decay = cms.string('OurMuPrescaled2012Leptons:muons@- OurMuPrescaled2012Leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 27 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("prescaledTriggerMatchPt") > 24 ')
)


process.allOurMuPrescaled2012MuonsPlusMuonsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 0'),
    decay = cms.string('OurMuPrescaled2012Leptons:muons@+ OurMuPrescaled2012Leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 27 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("prescaledTriggerMatchPt") > 24 ')
)


process.allOurMuPrescaled2012MuonsPlusMuonsPlus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == -26'),
    decay = cms.string('OurMuPrescaled2012Leptons:muons@+ OurMuPrescaled2012Leptons:muons@+'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 27 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("prescaledTriggerMatchPt") > 24 ')
)


process.allOurMuPrescaled2012MuonsSameSign = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string(''),
    decay = cms.string('OurMuPrescaled2012Leptons:muons@- OurMuPrescaled2012Leptons:muons@-'),
    loose_cut = cms.string('isGlobalMuon && isTrackerMuon && pt > 27 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    tight_cut = cms.string('userFloat("prescaledTriggerMatchPt") > 24 ')
)


process.allSimpleMuonsAllSigns = cms.EDProducer("Zprime2muCombiner",
    checkCharge = cms.bool(False),
    cut = cms.string(''),
    decay = cms.string('SimpleLeptons:muons@- SimpleLeptons:muons@-'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsElectronsAllSigns = cms.EDProducer("Zprime2muCombiner",
    checkCharge = cms.bool(False),
    cut = cms.string(''),
    decay = cms.string('SimpleLeptons:muons@+ SimpleLeptons:electrons@+'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsElectronsOppSign = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string(''),
    decay = cms.string('SimpleLeptons:muons@+ SimpleLeptons:electrons@-'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsElectronsSameSign = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string(''),
    decay = cms.string('SimpleLeptons:muons@+ SimpleLeptons:electrons@+'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsMinusElectronsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 24'),
    decay = cms.string('SimpleLeptons:muons@- SimpleLeptons:electrons@-'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsMinusElectronsPlus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 2'),
    decay = cms.string('SimpleLeptons:muons@- SimpleLeptons:electrons@+'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsMinusMuonsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 26'),
    decay = cms.string('SimpleLeptons:muons@- SimpleLeptons:muons@-'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsPlusElectronsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == -2'),
    decay = cms.string('SimpleLeptons:muons@+ SimpleLeptons:electrons@-'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsPlusElectronsPlus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == -24'),
    decay = cms.string('SimpleLeptons:muons@+ SimpleLeptons:electrons@+'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsPlusMuonsMinus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == 0'),
    decay = cms.string('SimpleLeptons:muons@+ SimpleLeptons:muons@-'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsPlusMuonsPlus = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string('daughter(0).pdgId() + daughter(1).pdgId() == -26'),
    decay = cms.string('SimpleLeptons:muons@+ SimpleLeptons:muons@+'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.allSimpleMuonsSameSign = cms.EDProducer("Zprime2muCombiner",
    cut = cms.string(''),
    decay = cms.string('SimpleLeptons:muons@- SimpleLeptons:muons@-'),
    electron_cut_mask = cms.uint32(0),
    loose_cut = cms.string('isGlobalMuon && pt > 20.'),
    tight_cut = cms.string('')
)


process.dimuons = cms.EDProducer("Zprime2muCompositeCandidatePicker",
    back_to_back_cos_angle_min = cms.double(-0.9998),
    cut = cms.string(''),
    do_remove_overlap = cms.bool(True),
    dpt_over_pt_max = cms.double(0.3),
    max_candidates = cms.uint32(1),
    sort_by_pt = cms.bool(True),
    src = cms.InputTag("allDimuons"),
    vertex_chi2_max = cms.double(20)
)


process.leptons = cms.EDProducer("Zprime2muLeptonProducer",
    electron_cuts = cms.string('userInt("HEEPId") == 0'),
    electron_muon_veto_dR = cms.double(-1),
    electron_src = cms.InputTag("cleanPatElectrons"),
    electron_srcSecond = cms.InputTag("cleanPatElectrons"),
    muon_cuts = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    muon_photon_match_src = cms.InputTag("muonPhotonMatch"),
    muon_src = cms.InputTag("cleanPatMuonsTriggerMatch"),
    muon_srcSecond = cms.InputTag("cleanPatMuonsTriggerMatch"),
    muon_track_for_momentum = cms.string('TunePNew'),
    muon_track_for_momentum_CSC = cms.string('Inner'),
    trigger_match_max_dR = cms.double(0.2),
    trigger_summary_src = cms.InputTag("hltTriggerSummaryAOD","","HLT")
)


process.leptons_mini = cms.EDProducer("Zprime2muLeptonProducer",
    electron_cuts = cms.string('userInt("HEEPId") == 0'),
    electron_muon_veto_dR = cms.double(-1),
    electron_src = cms.InputTag("slimmedElectrons"),
    electron_srcSecond = cms.InputTag("slimmedElectrons"),
    muon_cuts = cms.string('isGlobalMuon && isTrackerMuon && pt > 53 && abs(dB) < 0.2 && isolationR03.sumPt / innerTrack.pt < 0.10 && globalTrack.hitPattern.trackerLayersWithMeasurement > 5 && globalTrack.hitPattern.numberOfValidPixelHits >= 1 && globalTrack.hitPattern.numberOfValidMuonHits > 0 && numberOfMatchedStations > 1'),
    muon_photon_match_src = cms.InputTag("muonPhotonMatch_MiniAOD"),
    muon_src = cms.InputTag("slimmedMuons"),
    muon_srcSecond = cms.InputTag("slimmedMuons"),
    muon_track_for_momentum = cms.string('TunePNew'),
    muon_track_for_momentum_CSC = cms.string('Inner'),
    trigger_match_max_dR = cms.double(0.2),
    trigger_summary_src = cms.InputTag("TriggerResults","","HLT")
)


process.muonPhotonMatch = cms.EDProducer("TrivialDeltaRViewMatcher",
    distMin = cms.double(0.1),
    matched = cms.InputTag("cleanPatPhotons"),
    src = cms.InputTag("cleanPatMuonsTriggerMatch")
)


process.PrescaleToCommon = cms.EDFilter("PrescaleToCommon",
    TriggerResults_src = cms.InputTag("TriggerResults","","HLT"),
    assume_simulation_has_prescale_1 = cms.bool(True),
    hlt_src = cms.InputTag("TriggerResults","","HLT"),
    overall_prescale = cms.int32(350),
    trigger_paths = cms.vstring('HLT_Mu24_eta2p1_v1', 
        'HLT_Mu24_eta2p1_v2')
)


process.goodDataFilter = cms.EDFilter("HLTHighLevel",
    HLTPaths = cms.vstring('goodDataPrimaryVertexFilter'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","PAT"),
    andOr = cms.bool(False),
    eventSetupPathsKey = cms.string(''),
    throw = cms.bool(True)
)


process.Our2012MuonsAllSignsHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsAllSigns"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsElectronsAllSignsHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsElectronsAllSigns"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsElectronsOppSignHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsElectronsOppSign"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsElectronsSameSignHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsElectronsSameSign"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsMinusElectronsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsMinusElectronsMinus"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsMinusElectronsPlusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsMinusElectronsPlus"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsMinusMuonsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsMinusMuonsMinus"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsPlusElectronsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsPlusElectronsMinus"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsPlusElectronsPlusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsPlusElectronsPlus"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsPlusMuonsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsPlusMuonsMinus"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsPlusMuonsPlusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsPlusMuonsPlus"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.Our2012MuonsSameSignHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("Our2012MuonsSameSign"),
    lepton_src = cms.InputTag("Our2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.OurMuPrescaled2012MuonsAllSignsHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("OurMuPrescaled2012MuonsAllSigns"),
    lepton_src = cms.InputTag("OurMuPrescaled2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.OurMuPrescaled2012MuonsMinusMuonsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("OurMuPrescaled2012MuonsMinusMuonsMinus"),
    lepton_src = cms.InputTag("OurMuPrescaled2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.OurMuPrescaled2012MuonsPlusMuonsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("OurMuPrescaled2012MuonsPlusMuonsMinus"),
    lepton_src = cms.InputTag("OurMuPrescaled2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.OurMuPrescaled2012MuonsPlusMuonsPlusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("OurMuPrescaled2012MuonsPlusMuonsPlus"),
    lepton_src = cms.InputTag("OurMuPrescaled2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.OurMuPrescaled2012MuonsSameSignHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("OurMuPrescaled2012MuonsSameSign"),
    lepton_src = cms.InputTag("OurMuPrescaled2012Leptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsAllSignsHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsAllSigns"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsElectronsAllSignsHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsElectronsAllSigns"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsElectronsOppSignHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsElectronsOppSign"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsElectronsSameSignHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsElectronsSameSign"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsMinusElectronsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsMinusElectronsMinus"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsMinusElectronsPlusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsMinusElectronsPlus"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsMinusMuonsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsMinusMuonsMinus"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsPlusElectronsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsPlusElectronsMinus"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsPlusElectronsPlusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsPlusElectronsPlus"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsPlusMuonsMinusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsPlusMuonsMinus"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsPlusMuonsPlusHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsPlusMuonsPlus"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleMuonsSameSignHistos = cms.EDAnalyzer("Zprime2muHistosFromPAT",
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dilepton_src = cms.InputTag("SimpleMuonsSameSign"),
    lepton_src = cms.InputTag("SimpleLeptons","slimmedMuons"),
    leptonsFromDileptons = cms.bool(True),
    useMadgraphWeight = cms.bool(False),
    use_bs_and_pv = cms.bool(True),
    vertex_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleNtupler = cms.EDAnalyzer("SimpleNtupler",
    TriggerResults_src = cms.InputTag("TriggerResults","","PAT"),
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dimu_src = cms.InputTag("SimpleMuonsAllSigns"),
    genEventInfo = cms.untracked.InputTag("generator"),
    vertices_src = cms.InputTag("offlinePrimaryVertices")
)


process.SimpleNtuplerEmu = cms.EDAnalyzer("SimpleNtupler",
    TriggerResults_src = cms.InputTag("TriggerResults","","PAT"),
    beamspot_src = cms.InputTag("offlineBeamSpot"),
    dimu_src = cms.InputTag("SimpleMuonsElectronsAllSigns"),
    genEventInfo = cms.untracked.InputTag("generator"),
    vertices_src = cms.InputTag("offlinePrimaryVertices")
)


process.Zprime2muAnalysisSequence_MiniAOD = cms.Sequence(process.muonPhotonMatch+process.leptons_mini+process.allDimuons+process.dimuons)


process.Zprime2muAnalysisSequence = cms.Sequence(process.muonPhotonMatch+process.leptons+process.allDimuons+process.dimuons)


process.pathSimple = cms.Path(process.muonPhotonMatch+process.SimpleLeptons+process.allSimpleMuonsPlusMuonsMinus+process.SimpleMuonsPlusMuonsMinus+process.SimpleMuonsPlusMuonsMinusHistos+process.allSimpleMuonsPlusMuonsPlus+process.SimpleMuonsPlusMuonsPlus+process.SimpleMuonsPlusMuonsPlusHistos+process.allSimpleMuonsMinusMuonsMinus+process.SimpleMuonsMinusMuonsMinus+process.SimpleMuonsMinusMuonsMinusHistos+process.allSimpleMuonsSameSign+process.SimpleMuonsSameSign+process.SimpleMuonsSameSignHistos+process.allSimpleMuonsAllSigns+process.SimpleMuonsAllSigns+process.SimpleMuonsAllSignsHistos+process.allSimpleMuonsPlusElectronsMinus+process.SimpleMuonsPlusElectronsMinus+process.SimpleMuonsPlusElectronsMinusHistos+process.allSimpleMuonsMinusElectronsPlus+process.SimpleMuonsMinusElectronsPlus+process.SimpleMuonsMinusElectronsPlusHistos+process.allSimpleMuonsPlusElectronsPlus+process.SimpleMuonsPlusElectronsPlus+process.SimpleMuonsPlusElectronsPlusHistos+process.allSimpleMuonsMinusElectronsMinus+process.SimpleMuonsMinusElectronsMinus+process.SimpleMuonsMinusElectronsMinusHistos+process.allSimpleMuonsElectronsOppSign+process.SimpleMuonsElectronsOppSign+process.SimpleMuonsElectronsOppSignHistos+process.allSimpleMuonsElectronsSameSign+process.SimpleMuonsElectronsSameSign+process.SimpleMuonsElectronsSameSignHistos+process.allSimpleMuonsElectronsAllSigns+process.SimpleMuonsElectronsAllSigns+process.SimpleMuonsElectronsAllSignsHistos+process.SimpleNtupler+process.SimpleNtuplerEmu)


process.pathOur2012 = cms.Path(process.goodDataFilter+process.muonPhotonMatch+process.Our2012Leptons+process.allOur2012MuonsPlusMuonsMinus+process.Our2012MuonsPlusMuonsMinus+process.Our2012MuonsPlusMuonsMinusHistos+process.allOur2012MuonsPlusMuonsPlus+process.Our2012MuonsPlusMuonsPlus+process.Our2012MuonsPlusMuonsPlusHistos+process.allOur2012MuonsMinusMuonsMinus+process.Our2012MuonsMinusMuonsMinus+process.Our2012MuonsMinusMuonsMinusHistos+process.allOur2012MuonsSameSign+process.Our2012MuonsSameSign+process.Our2012MuonsSameSignHistos+process.allOur2012MuonsAllSigns+process.Our2012MuonsAllSigns+process.Our2012MuonsAllSignsHistos+process.allOur2012MuonsPlusElectronsMinus+process.Our2012MuonsPlusElectronsMinus+process.Our2012MuonsPlusElectronsMinusHistos+process.allOur2012MuonsMinusElectronsPlus+process.Our2012MuonsMinusElectronsPlus+process.Our2012MuonsMinusElectronsPlusHistos+process.allOur2012MuonsPlusElectronsPlus+process.Our2012MuonsPlusElectronsPlus+process.Our2012MuonsPlusElectronsPlusHistos+process.allOur2012MuonsMinusElectronsMinus+process.Our2012MuonsMinusElectronsMinus+process.Our2012MuonsMinusElectronsMinusHistos+process.allOur2012MuonsElectronsOppSign+process.Our2012MuonsElectronsOppSign+process.Our2012MuonsElectronsOppSignHistos+process.allOur2012MuonsElectronsSameSign+process.Our2012MuonsElectronsSameSign+process.Our2012MuonsElectronsSameSignHistos+process.allOur2012MuonsElectronsAllSigns+process.Our2012MuonsElectronsAllSigns+process.Our2012MuonsElectronsAllSignsHistos)


process.pathOurMuPrescaled2012 = cms.Path(process.PrescaleToCommon+process.goodDataFilter+process.muonPhotonMatch+process.OurMuPrescaled2012Leptons+process.allOurMuPrescaled2012MuonsPlusMuonsMinus+process.OurMuPrescaled2012MuonsPlusMuonsMinus+process.OurMuPrescaled2012MuonsPlusMuonsMinusHistos+process.allOurMuPrescaled2012MuonsPlusMuonsPlus+process.OurMuPrescaled2012MuonsPlusMuonsPlus+process.OurMuPrescaled2012MuonsPlusMuonsPlusHistos+process.allOurMuPrescaled2012MuonsMinusMuonsMinus+process.OurMuPrescaled2012MuonsMinusMuonsMinus+process.OurMuPrescaled2012MuonsMinusMuonsMinusHistos+process.allOurMuPrescaled2012MuonsSameSign+process.OurMuPrescaled2012MuonsSameSign+process.OurMuPrescaled2012MuonsSameSignHistos+process.allOurMuPrescaled2012MuonsAllSigns+process.OurMuPrescaled2012MuonsAllSigns+process.OurMuPrescaled2012MuonsAllSignsHistos)


process.MessageLogger = cms.Service("MessageLogger",
    FrameworkJobReport = cms.untracked.PSet(
        FwkJob = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        optionalPSet = cms.untracked.bool(True)
    ),
    categories = cms.untracked.vstring('FwkJob', 
        'FwkReport', 
        'FwkSummary', 
        'Root_NoDictionary'),
    cerr = cms.untracked.PSet(
        FwkJob = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        FwkReport = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True),
            reportEvery = cms.untracked.int32(1)
        ),
        FwkSummary = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True),
            reportEvery = cms.untracked.int32(1)
        ),
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        noTimeStamps = cms.untracked.bool(False),
        optionalPSet = cms.untracked.bool(True),
        threshold = cms.untracked.string('INFO')
    ),
    cerr_stats = cms.untracked.PSet(
        optionalPSet = cms.untracked.bool(True),
        output = cms.untracked.string('cerr'),
        threshold = cms.untracked.string('WARNING')
    ),
    cout = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    debugModules = cms.untracked.vstring(),
    debugs = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    default = cms.untracked.PSet(

    ),
    destinations = cms.untracked.vstring('warnings', 
        'errors', 
        'infos', 
        'debugs', 
        'cout', 
        'cerr'),
    errors = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    fwkJobReports = cms.untracked.vstring('FrameworkJobReport'),
    infos = cms.untracked.PSet(
        Root_NoDictionary = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        optionalPSet = cms.untracked.bool(True),
        placeholder = cms.untracked.bool(True)
    ),
    statistics = cms.untracked.vstring('cerr_stats'),
    suppressDebug = cms.untracked.vstring(),
    suppressInfo = cms.untracked.vstring(),
    suppressWarning = cms.untracked.vstring(),
    warnings = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    )
)


process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
    PrescaleToCommon = cms.PSet(
        initialSeed = cms.untracked.uint32(1219)
    )
)


process.TFileService = cms.Service("TFileService",
    fileName = cms.string('zp2mu_histos.root')
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    debugV = cms.untracked.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useDDD = cms.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring('HCAL', 
        'ZDC', 
        'CASTOR', 
        'EcalBarrel', 
        'EcalEndcap', 
        'EcalPreshower', 
        'TOWER')
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerGeometryFromDBEP = cms.ESProducer("CaloTowerGeometryFromDBEP",
    applyAlignment = cms.bool(False),
    hcalTopologyConstants = cms.PSet(
        maxDepthHB = cms.int32(2),
        maxDepthHE = cms.int32(3),
        mode = cms.string('HcalTopologyMode::LHC')
    )
)


process.CaloTowerTopologyEP = cms.ESProducer("CaloTowerTopologyEP")


process.CastorDbProducer = cms.ESProducer("CastorDbProducer")


process.CastorGeometryFromDBEP = cms.ESProducer("CastorGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDDD = cms.bool(False)
)


process.EcalBarrelGeometryFromDBEP = cms.ESProducer("EcalBarrelGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryFromDBEP = cms.ESProducer("EcalEndcapGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalLaserCorrectionService = cms.ESProducer("EcalLaserCorrectionService")


process.EcalPreshowerGeometryFromDBEP = cms.ESProducer("EcalPreshowerGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.HcalAlignmentEP = cms.ESProducer("HcalAlignmentEP")


process.HcalGeometryFromDBEP = cms.ESProducer("HcalGeometryFromDBEP",
    applyAlignment = cms.bool(True),
    hcalTopologyConstants = cms.PSet(
        maxDepthHB = cms.int32(2),
        maxDepthHE = cms.int32(3),
        mode = cms.string('HcalTopologyMode::LHC')
    )
)


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.ParabolicParametrizedMagneticFieldProducer = cms.ESProducer("ParametrizedMagneticFieldProducer",
    label = cms.untracked.string('ParabolicMf'),
    parameters = cms.PSet(

    ),
    version = cms.string('Parabolic')
)


process.ParametrizedMagneticFieldProducer = cms.ESProducer("ParametrizedMagneticFieldProducer",
    label = cms.untracked.string('parametrizedField'),
    parameters = cms.PSet(
        BValue = cms.string('3_8T')
    ),
    version = cms.string('OAE_1103l_071212')
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    compatibiltyWith11 = cms.untracked.bool(True),
    useDDD = cms.untracked.bool(False)
)


process.SiStripRecHitMatcherESProducer = cms.ESProducer("SiStripRecHitMatcherESProducer",
    ComponentName = cms.string('StandardMatcher'),
    NSigmaInside = cms.double(3.0),
    PreFilter = cms.bool(False)
)


process.StripCPEfromTrackAngleESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('StripCPEfromTrackAngle'),
    ComponentType = cms.string('StripCPEfromTrackAngle'),
    parameters = cms.PSet(
        mLC_P0 = cms.double(-0.326),
        mLC_P1 = cms.double(0.618),
        mLC_P2 = cms.double(0.3),
        mTEC_P0 = cms.double(-1.885),
        mTEC_P1 = cms.double(0.471),
        mTIB_P0 = cms.double(-0.742),
        mTIB_P1 = cms.double(0.202),
        mTID_P0 = cms.double(-1.427),
        mTID_P1 = cms.double(0.433),
        mTOB_P0 = cms.double(-1.026),
        mTOB_P1 = cms.double(0.253),
        maxChgOneMIP = cms.double(6000.0),
        useLegacyError = cms.bool(False)
    )
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer")


process.TransientTrackBuilderESProducer = cms.ESProducer("TransientTrackBuilderESProducer",
    ComponentName = cms.string('TransientTrackBuilder')
)


process.VolumeBasedMagneticFieldESProducer = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    cacheLastVolume = cms.untracked.bool(True),
    debugBuilder = cms.untracked.bool(False),
    geometryVersion = cms.int32(120812),
    gridFiles = cms.VPSet(cms.PSet(
        master = cms.int32(0),
        path = cms.string('s[s]_1/grid.[v].bin'),
        sectors = cms.string('0'),
        volumes = cms.string('1001-1010,1012-1027,1030-1033,1036-1041,1044-1049,1052-1057,1060-1063,1066-1071,1074-1077,1080-1083,1130-1133,1138-1360')
    ), 
        cms.PSet(
            master = cms.int32(0),
            path = cms.string('s[s]_2/grid.[v].bin'),
            sectors = cms.string('0'),
            volumes = cms.string('2001-2010,2012-2027,2030-2033,2036-2041,2044-2049,2052-2057,2060-2063,2066-2071,2074-2077,2080-2083,2130-2133,2138-2360')
        ), 
        cms.PSet(
            master = cms.int32(1),
            path = cms.string('s01_1/grid.[v].bin'),
            sectors = cms.string('0'),
            volumes = cms.string('1011,1028-1029,1034-1035,1042-1043,1050-1051,1058-1059,1064-1065,1072-1073,1078-1079,1084-1129,1136-1137')
        ), 
        cms.PSet(
            master = cms.int32(1),
            path = cms.string('s01_2/grid.[v].bin'),
            sectors = cms.string('0'),
            volumes = cms.string('2011,2028-2029,2034-2035,2042-2043,2050-2051,2058-2059,2064-2065,2072-2073,2078-2079,2084-2129,2136-2137')
        ), 
        cms.PSet(
            master = cms.int32(4),
            path = cms.string('s04_1/grid.[v].bin'),
            sectors = cms.string('0'),
            volumes = cms.string('1134-1135')
        ), 
        cms.PSet(
            master = cms.int32(4),
            path = cms.string('s04_2/grid.[v].bin'),
            sectors = cms.string('0'),
            volumes = cms.string('2134-2135')
        )),
    label = cms.untracked.string(''),
    paramLabel = cms.string('parametrizedField'),
    scalingFactors = cms.vdouble(),
    scalingVolumes = cms.vint32(),
    useParametrizedTrackerField = cms.bool(True),
    version = cms.string('grid_120812_3_8t_v7_large')
)


process.ZdcGeometryFromDBEP = cms.ESProducer("ZdcGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.hcalDDDRecConstants = cms.ESProducer("HcalDDDRecConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalDDDSimConstants = cms.ESProducer("HcalDDDSimConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalTopologyIdeal = cms.ESProducer("HcalTopologyIdealEP",
    Exclude = cms.untracked.string(''),
    appendToDataLabel = cms.string('')
)


process.hcal_db_producer = cms.ESProducer("HcalDbProducer",
    dump = cms.untracked.vstring(''),
    file = cms.untracked.string('')
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useDDD = cms.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.siPixelQualityESProducer = cms.ESProducer("SiPixelQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiPixelQualityFromDbRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiPixelDetVOffRcd'),
            tag = cms.string('')
        ))
)


process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer("SiStripBackPlaneCorrectionDepESProducer",
    BackPlaneCorrectionDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    BackPlaneCorrectionPeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    )
)


process.siStripGainESProducer = cms.ESProducer("SiStripGainESProducer",
    APVGain = cms.VPSet(cms.PSet(
        Label = cms.untracked.string(''),
        NormalizationFactor = cms.untracked.double(1.0),
        Record = cms.string('SiStripApvGainRcd')
    ), 
        cms.PSet(
            Label = cms.untracked.string(''),
            NormalizationFactor = cms.untracked.double(1.0),
            Record = cms.string('SiStripApvGain2Rcd')
        )),
    AutomaticNormalization = cms.bool(False),
    appendToDataLabel = cms.string(''),
    printDebug = cms.untracked.bool(False)
)


process.siStripLorentzAngleDepESProducer = cms.ESProducer("SiStripLorentzAngleDepESProducer",
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    ),
    LorentzAngleDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripLorentzAngleRcd')
    ),
    LorentzAnglePeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripLorentzAngleRcd')
    )
)


process.siStripQualityESProducer = cms.ESProducer("SiStripQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiStripDetVOffRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiStripDetCablingRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('RunInfoRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadFiberRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadModuleRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadStripRcd'),
            tag = cms.string('')
        )),
    PrintDebugOutput = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    appendToDataLabel = cms.string('')
)


process.sistripconn = cms.ESProducer("SiStripConnectivity")


process.stripCPEESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('stripCPE'),
    ComponentType = cms.string('SimpleStripCPE'),
    parameters = cms.PSet(

    )
)


process.trackerGeometryDB = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDDD = cms.bool(False)
)


process.trackerNumberingGeometryDB = cms.ESProducer("TrackerGeometricDetESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False)
)


process.trackerTopology = cms.ESProducer("TrackerTopologyEP",
    appendToDataLabel = cms.string('')
)


process.GlobalTag = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    DumpStat = cms.untracked.bool(False),
    ReconnectEachRun = cms.untracked.bool(False),
    RefreshAlways = cms.untracked.bool(False),
    RefreshEachRun = cms.untracked.bool(False),
    RefreshOpenIOVs = cms.untracked.bool(False),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    globaltag = cms.string('80X_mcRun2_asymptotic_2016_v3'),
    pfnPostfix = cms.untracked.string(''),
    pfnPrefix = cms.untracked.string(''),
    snapshotTime = cms.string(''),
    toGet = cms.VPSet()
)


process.eegeom = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd')
)


process.es_hardcode = cms.ESSource("HcalHardcodeCalibrations",
    GainWidthsForTrigPrims = cms.bool(False),
    HERecalibration = cms.bool(False),
    HEreCalibCutoff = cms.double(20.0),
    HFRecalibration = cms.bool(False),
    iLumi = cms.double(-1.0),
    testHFQIE10 = cms.bool(False),
    toGet = cms.untracked.vstring('GainWidths')
)


process.magfield = cms.ESSource("XMLIdealGeometryESSource",
    geomXMLFiles = cms.vstring('Geometry/CMSCommonData/data/normal/cmsextent.xml', 
        'Geometry/CMSCommonData/data/cms.xml', 
        'Geometry/CMSCommonData/data/cmsMagneticField.xml', 
        'MagneticField/GeomBuilder/data/MagneticFieldVolumes_1_v7_large.xml', 
        'MagneticField/GeomBuilder/data/MagneticFieldVolumes_2_v7_large.xml', 
        'Geometry/CMSCommonData/data/materials.xml'),
    rootNodeName = cms.string('cmsMagneticField:MAGF')
)


process.prefer("es_hardcode")

process.prefer("magfield")

